{"ast":null,"code":"/*!\n * PhysicsPropsPlugin 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n  _coreInitted,\n  _getUnit,\n  _getStyleSaver,\n  _reverting,\n  _getGSAP = function _getGSAP() {\n    return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n  },\n  _round = function _round(value) {\n    return Math.round(value * 10000) / 10000;\n  },\n  _bonusValidated = 1,\n  //<name>PhysicsPropsPlugin</name>\n  _initCore = function _initCore(core) {\n    gsap = core || _getGSAP();\n    if (!_coreInitted) {\n      _getUnit = gsap.utils.getUnit;\n      _getStyleSaver = gsap.core.getStyleSaver;\n      _reverting = gsap.core.reverting || function () {};\n      _coreInitted = 1;\n    }\n  };\nvar PhysicsProp = function PhysicsProp(target, p, velocity, acceleration, friction, stepsPerTimeUnit) {\n  var cache = target._gsap,\n    curVal = cache.get(target, p);\n  this.p = p;\n  this.set = cache.set(target, p); //setter\n\n  this.s = this.val = parseFloat(curVal);\n  this.u = _getUnit(curVal) || 0;\n  this.vel = velocity || 0;\n  this.v = this.vel / stepsPerTimeUnit;\n  if (acceleration || acceleration === 0) {\n    this.acc = acceleration;\n    this.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n  } else {\n    this.acc = this.a = 0;\n  }\n  this.fr = 1 - (friction || 0);\n};\nexport var PhysicsPropsPlugin = {\n  version: \"3.13.0\",\n  name: \"physicsProps\",\n  register: _initCore,\n  init: function init(target, value, tween) {\n    _coreInitted || _initCore();\n    var data = this,\n      p;\n    data.styles = _getStyleSaver && _getStyleSaver(target);\n    data.target = target;\n    data.tween = tween;\n    data.step = 0;\n    data.sps = 30; //steps per second\n\n    data.vProps = [];\n    for (p in value) {\n      var _value$p = value[p],\n        velocity = _value$p.velocity,\n        acceleration = _value$p.acceleration,\n        friction = _value$p.friction;\n      if (velocity || acceleration) {\n        data.vProps.push(new PhysicsProp(target, p, velocity, acceleration, friction, data.sps));\n        data._props.push(p);\n        _getStyleSaver && data.styles.save(p);\n        friction && (data.hasFr = 1);\n      }\n    }\n  },\n  render: function render(ratio, data) {\n    var vProps = data.vProps,\n      tween = data.tween,\n      target = data.target,\n      step = data.step,\n      hasFr = data.hasFr,\n      sps = data.sps,\n      i = vProps.length,\n      time = tween._from ? tween._dur - tween._time : tween._time,\n      curProp,\n      steps,\n      remainder,\n      j,\n      tt;\n    if (tween._time || !_reverting()) {\n      if (hasFr) {\n        time *= sps;\n        steps = (time | 0) - step;\n        /*\n        Note: rounding errors build up if we walk the calculations backward which we used to do like this to maximize performance:\n        while (i--) {\n        \tcurProp = vProps[i];\n        \tj = -steps;\n        \twhile (j--) {\n        \t\tcurProp.val -= curProp.v;\n        \t\tcurProp.v /= curProp.fr;\n        \t\tcurProp.v -= curProp.a;\n        \t}\n        \tcurProp.set(target, curProp.p, _round(curProp.val + (curProp.v * remainder * curProp.fr)) + curProp.u);\n        }\n        but now for the sake of accuracy (to ensure rewinding always goes back to EXACTLY the same spot), we force the calculations to go forward every time. So if the tween is going backward, we just start from the beginning and iterate. This is only necessary with friction.\n         */\n\n        if (steps < 0) {\n          while (i--) {\n            curProp = vProps[i];\n            curProp.v = curProp.vel / sps;\n            curProp.val = curProp.s;\n          }\n          i = vProps.length;\n          data.step = step = 0;\n          steps = time | 0;\n        }\n        remainder = time % 1;\n        while (i--) {\n          curProp = vProps[i];\n          j = steps;\n          while (j--) {\n            curProp.v += curProp.a;\n            curProp.v *= curProp.fr;\n            curProp.val += curProp.v;\n          }\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder * curProp.fr) + curProp.u);\n        }\n        data.step += steps;\n      } else {\n        tt = time * time * 0.5;\n        while (i--) {\n          curProp = vProps[i];\n          curProp.set(target, curProp.p, _round(curProp.s + curProp.vel * time + curProp.acc * tt) + curProp.u);\n        }\n      }\n    } else {\n      data.styles.revert();\n    }\n  },\n  kill: function kill(property) {\n    var vProps = this.vProps,\n      i = vProps.length;\n    while (i--) {\n      vProps[i].p === property && vProps.splice(i, 1);\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(PhysicsPropsPlugin);\nexport { PhysicsPropsPlugin as default };","map":{"version":3,"names":["gsap","_coreInitted","_getUnit","_getStyleSaver","_reverting","_getGSAP","window","registerPlugin","_round","value","Math","round","_bonusValidated","_initCore","core","utils","getUnit","getStyleSaver","reverting","PhysicsProp","target","p","velocity","acceleration","friction","stepsPerTimeUnit","cache","_gsap","curVal","get","set","s","val","parseFloat","u","vel","v","acc","a","fr","PhysicsPropsPlugin","version","name","register","init","tween","data","styles","step","sps","vProps","_value$p","push","_props","save","hasFr","render","ratio","i","length","time","_from","_dur","_time","curProp","steps","remainder","j","tt","revert","kill","property","splice","default"],"sources":["/Users/anahlewi/Desktop/seka_jade-website/node_modules/gsap/PhysicsPropsPlugin.js"],"sourcesContent":["/*!\n * PhysicsPropsPlugin 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _getUnit,\n    _getStyleSaver,\n    _reverting,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _bonusValidated = 1,\n    //<name>PhysicsPropsPlugin</name>\n_initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (!_coreInitted) {\n    _getUnit = gsap.utils.getUnit;\n    _getStyleSaver = gsap.core.getStyleSaver;\n\n    _reverting = gsap.core.reverting || function () {};\n\n    _coreInitted = 1;\n  }\n};\n\nvar PhysicsProp = function PhysicsProp(target, p, velocity, acceleration, friction, stepsPerTimeUnit) {\n  var cache = target._gsap,\n      curVal = cache.get(target, p);\n  this.p = p;\n  this.set = cache.set(target, p); //setter\n\n  this.s = this.val = parseFloat(curVal);\n  this.u = _getUnit(curVal) || 0;\n  this.vel = velocity || 0;\n  this.v = this.vel / stepsPerTimeUnit;\n\n  if (acceleration || acceleration === 0) {\n    this.acc = acceleration;\n    this.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n  } else {\n    this.acc = this.a = 0;\n  }\n\n  this.fr = 1 - (friction || 0);\n};\n\nexport var PhysicsPropsPlugin = {\n  version: \"3.13.0\",\n  name: \"physicsProps\",\n  register: _initCore,\n  init: function init(target, value, tween) {\n    _coreInitted || _initCore();\n    var data = this,\n        p;\n    data.styles = _getStyleSaver && _getStyleSaver(target);\n    data.target = target;\n    data.tween = tween;\n    data.step = 0;\n    data.sps = 30; //steps per second\n\n    data.vProps = [];\n\n    for (p in value) {\n      var _value$p = value[p],\n          velocity = _value$p.velocity,\n          acceleration = _value$p.acceleration,\n          friction = _value$p.friction;\n\n      if (velocity || acceleration) {\n        data.vProps.push(new PhysicsProp(target, p, velocity, acceleration, friction, data.sps));\n\n        data._props.push(p);\n\n        _getStyleSaver && data.styles.save(p);\n        friction && (data.hasFr = 1);\n      }\n    }\n  },\n  render: function render(ratio, data) {\n    var vProps = data.vProps,\n        tween = data.tween,\n        target = data.target,\n        step = data.step,\n        hasFr = data.hasFr,\n        sps = data.sps,\n        i = vProps.length,\n        time = tween._from ? tween._dur - tween._time : tween._time,\n        curProp,\n        steps,\n        remainder,\n        j,\n        tt;\n\n    if (tween._time || !_reverting()) {\n      if (hasFr) {\n        time *= sps;\n        steps = (time | 0) - step;\n        /*\n        Note: rounding errors build up if we walk the calculations backward which we used to do like this to maximize performance:\n        while (i--) {\n        \tcurProp = vProps[i];\n        \tj = -steps;\n        \twhile (j--) {\n        \t\tcurProp.val -= curProp.v;\n        \t\tcurProp.v /= curProp.fr;\n        \t\tcurProp.v -= curProp.a;\n        \t}\n        \tcurProp.set(target, curProp.p, _round(curProp.val + (curProp.v * remainder * curProp.fr)) + curProp.u);\n        }\n        but now for the sake of accuracy (to ensure rewinding always goes back to EXACTLY the same spot), we force the calculations to go forward every time. So if the tween is going backward, we just start from the beginning and iterate. This is only necessary with friction.\n         */\n\n        if (steps < 0) {\n          while (i--) {\n            curProp = vProps[i];\n            curProp.v = curProp.vel / sps;\n            curProp.val = curProp.s;\n          }\n\n          i = vProps.length;\n          data.step = step = 0;\n          steps = time | 0;\n        }\n\n        remainder = time % 1;\n\n        while (i--) {\n          curProp = vProps[i];\n          j = steps;\n\n          while (j--) {\n            curProp.v += curProp.a;\n            curProp.v *= curProp.fr;\n            curProp.val += curProp.v;\n          }\n\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder * curProp.fr) + curProp.u);\n        }\n\n        data.step += steps;\n      } else {\n        tt = time * time * 0.5;\n\n        while (i--) {\n          curProp = vProps[i];\n          curProp.set(target, curProp.p, _round(curProp.s + curProp.vel * time + curProp.acc * tt) + curProp.u);\n        }\n      }\n    } else {\n      data.styles.revert();\n    }\n  },\n  kill: function kill(property) {\n    var vProps = this.vProps,\n        i = vProps.length;\n\n    while (i--) {\n      vProps[i].p === property && vProps.splice(i, 1);\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(PhysicsPropsPlugin);\nexport { PhysicsPropsPlugin as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}